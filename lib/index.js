"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Tora_1 = require("./Tora");
require("babel-polyfill");
var PluginsManager_1 = require("./PluginsManager");
var express = require("express");
var index_1 = require("./models/index");
var conf_1 = require("./utils/conf");
var Logger_1 = require("./utils/Logger");
var mongodbURL_1 = require("./utils/mongodbURL");
var app = express();
index_1.connectDatabase(mongodbURL_1.default(conf_1.default.get('database:host'), conf_1.default.get('database:port'), conf_1.default.get('database:table'))).then(function () {
    Logger_1.default.info('Database connect success!');
    Tora_1.default.eventEmitter.emit('connectDatabaseSuccess');
}).catch(function (err) {
    Logger_1.default.error('Unable to connect to the database!\n', err);
    Tora_1.default.eventEmitter.emit('connectDatabaseError', err);
});
var server = app.listen(conf_1.default.get('server:port') || 3000, function () {
    var host = server.address().address;
    var port = server.address().port;
    Logger_1.default.info('Example app listening at http://%s:%s', host, port);
});
PluginsManager_1.loadPlugins();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEscUJBQTBCO0FBQzFCLFFBQXdCO0FBR3hCLCtCQUErQztBQUMvQyxzQkFBbUM7QUFDbkMsc0JBQWlEO0FBRWpELHFCQUFrQztBQUNsQyx1QkFBb0M7QUFDcEMsMkJBQTRDO0FBRTVDLElBQU0sQUFBRyxNQUFHLEFBQU8sQUFBRSxBQUFDO0FBRXRCLFFBQWUsZ0JBQUMsYUFBVSxRQUFDLE9BQU0sUUFBQyxBQUFHLElBQUMsQUFBZSxBQUFDLGtCQUFFLE9BQU0sUUFBQyxBQUFHLElBQUMsQUFBZSxBQUFDLGtCQUFFLE9BQU0sUUFBQyxBQUFHLElBQUMsQUFBZ0IsQUFBQyxBQUFDLEFBQUMsb0JBQ2hILEFBQUksS0FBQztBQUNKLGFBQU0sUUFBQyxBQUFJLEtBQUMsQUFBMkIsQUFBQyxBQUFDO0FBQ3pDLFdBQUksUUFBQyxBQUFZLGFBQUMsQUFBSSxLQUFDLEFBQXdCLEFBQUMsQUFBQyxBQUNuRDtBQUFDLEFBQUMsR0FDRCxBQUFLLE1BQUMsVUFBQyxBQUFHO0FBQ1QsYUFBTSxRQUFDLEFBQUssTUFBQyxBQUFzQyx3Q0FBRSxBQUFHLEFBQUMsQUFBQztBQUMxRCxXQUFJLFFBQUMsQUFBWSxhQUFDLEFBQUksS0FBQyxBQUFzQix3QkFBRSxBQUFHLEFBQUMsQUFBQyxBQUN0RDtBQUFDLEFBQUMsQUFBQztBQUVMLElBQU0sQUFBTSxhQUFPLEFBQU0sT0FBQyxPQUFNLFFBQUMsQUFBRyxJQUFDLEFBQWEsQUFBQyxrQkFBSSxBQUFJLE1BQUU7QUFDM0QsUUFBTSxBQUFJLE9BQUcsQUFBTSxPQUFDLEFBQU8sQUFBRSxVQUFDLEFBQU8sQUFBQztBQUN0QyxRQUFNLEFBQUksT0FBRyxBQUFNLE9BQUMsQUFBTyxBQUFFLFVBQUMsQUFBSSxBQUFDO0FBRW5DLGFBQU0sUUFBQyxBQUFJLEtBQUMsQUFBdUMseUNBQUUsQUFBSSxNQUFFLEFBQUksQUFBQyxBQUFDLEFBQ25FO0FBQUMsQUFBQyxBQUFDLENBTFksQUFBRztBQVFsQixpQkFBVyxBQUFFLEFBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgVG9yYSBmcm9tICcuL1RvcmEnO1xuaW1wb3J0ICdiYWJlbC1wb2x5ZmlsbCc7XG5pbXBvcnQgKiBhcyBwYXRoIGZyb20gJ3BhdGgnO1xuaW1wb3J0IFBvc3RNb2RlbCBmcm9tICcuL21vZGVscy9wb3N0JztcbmltcG9ydCB7IGxvYWRQbHVnaW5zIH0gZnJvbSAnLi9QbHVnaW5zTWFuYWdlcic7XG5pbXBvcnQgKiBhcyBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IHsgY29ubmVjdERhdGFiYXNlIH0gZnJvbSAnLi9tb2RlbHMvaW5kZXgnO1xuaW1wb3J0IHsgc2V0dXBOY29uZiB9IGZyb20gJy4vdXRpbHMvY29uZic7XG5pbXBvcnQgY29uZmlnIGZyb20gJy4vdXRpbHMvY29uZic7XG5pbXBvcnQgTG9nZ2VyIGZyb20gJy4vdXRpbHMvTG9nZ2VyJztcbmltcG9ydCBtb25nb2RiVVJMIGZyb20gJy4vdXRpbHMvbW9uZ29kYlVSTCc7XG5cbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcblxuY29ubmVjdERhdGFiYXNlKG1vbmdvZGJVUkwoY29uZmlnLmdldCgnZGF0YWJhc2U6aG9zdCcpLCBjb25maWcuZ2V0KCdkYXRhYmFzZTpwb3J0JyksIGNvbmZpZy5nZXQoJ2RhdGFiYXNlOnRhYmxlJykpKVxuICAudGhlbigoKSA9PiB7XG4gICAgTG9nZ2VyLmluZm8oJ0RhdGFiYXNlIGNvbm5lY3Qgc3VjY2VzcyEnKTtcbiAgICBUb3JhLmV2ZW50RW1pdHRlci5lbWl0KCdjb25uZWN0RGF0YWJhc2VTdWNjZXNzJyk7XG4gIH0pXG4gIC5jYXRjaCgoZXJyKSA9PiB7XG4gICAgTG9nZ2VyLmVycm9yKCdVbmFibGUgdG8gY29ubmVjdCB0byB0aGUgZGF0YWJhc2UhXFxuJywgZXJyKTtcbiAgICBUb3JhLmV2ZW50RW1pdHRlci5lbWl0KCdjb25uZWN0RGF0YWJhc2VFcnJvcicsIGVycik7XG4gIH0pO1xuXG5jb25zdCBzZXJ2ZXIgPSBhcHAubGlzdGVuKGNvbmZpZy5nZXQoJ3NlcnZlcjpwb3J0JykgfHwgMzAwMCwgKCkgPT4ge1xuICBjb25zdCBob3N0ID0gc2VydmVyLmFkZHJlc3MoKS5hZGRyZXNzO1xuICBjb25zdCBwb3J0ID0gc2VydmVyLmFkZHJlc3MoKS5wb3J0O1xuXG4gIExvZ2dlci5pbmZvKCdFeGFtcGxlIGFwcCBsaXN0ZW5pbmcgYXQgaHR0cDovLyVzOiVzJywgaG9zdCwgcG9ydCk7XG59KTtcblxuLy8gTG9hZCBQbHVnaW5zXG5sb2FkUGx1Z2lucygpO1xuIl19